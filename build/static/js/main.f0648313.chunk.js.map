{"version":3,"sources":["redux/phoneBook/phoneBook-actions.js","components/Navigation.js","images/default-avatar.png","components/button.js","components/UserMenu/UserMenu.js","components/AuthNav.js","components/AppBar.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","redux/phoneBook/phoneBook-reducer.js","redux/auth/auth-reducer.js","redux/store.js","index.js","redux/auth/auth-selectors.js","components/Spinner/Spinner.js","redux/auth/auth-operations.js","redux/auth/auth-actions.js","components/Layout/Layout.js"],"names":["fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","removeContactRequest","removeContactSuccess","removeContactError","changeFilter","clearError","connect","state","isAuthenticated","authSelectors","getIsAuthenticated","className","to","exact","activeClassName","useStyles","makeStyles","root","background","border","borderRadius","boxShadow","color","height","padding","ButtonMenu","onClick","classes","Button","mapDispatchToProps","onLogout","authOperations","logOut","name","getUsername","avatar","defaultAvatar","src","alt","width","AuthNav","styles","header","display","justifyContent","alignItems","borderBottom","style","token","getToken","Component","component","redirectTo","routeProps","render","props","restricted","HomePage","lazy","RegisterPage","LoginPage","PhoneBookPage","App","this","onGetCurrentUser","Layout","fallback","Spinner","path","getCurrentUser","initialState","contacts","createReducer","_","payload","filter","id","loading","setError","error","combineReducers","initialUserState","email","user","authActions","registerSuccess","loginSuccess","logoutSuccess","getCurrentUserSuccess","registerError","loginError","logoutError","getCurrentUserError","registerRequest","loginRequest","logoutRequest","getCurrentUserRequest","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","phoneBook","phoneBookReducer","devTools","process","persistor","persistStore","ReactDOM","document","querySelector","getError","getLoading","type","timeout","axios","defaults","baseURL","headers","common","Authorization","register","credential","dispatch","a","post","response","data","message","logIn","getState","persistedToken","get","children"],"mappings":"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","file":"static/js/main.f0648313.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\nexport const fetchContactError = createAction('contacts/fetchContactError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const removeContactRequest = createAction('contacts/removeContactRequest');\nexport const removeContactSuccess = createAction('contacts/removeContactSuccess');\nexport const removeContactError = createAction('contacts/removeContactError');\n\n\nexport const changeFilter = createAction('contacts/changeFilter');\n\nexport const clearError = createAction('contacts/clearError');\n\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport authSelectors from '../redux/auth/auth-selectors';\n\nconst Navigation = ({isAuthenticated}) => (\n  <nav className=\"nav\">\n    {!isAuthenticated &&\n     ( <NavLink\n        to=\"/\"\n        exact\n        className=\"NavLink\"\n        activeClassName=\"NavLink--active\"\n      >\n      Home\n    </NavLink>\n    )}\n\n    {isAuthenticated && \n    (<NavLink\n      to=\"/contacts\"\n      exact\n      className=\"NavLink\"\n      activeClassName=\"NavLink--active\"\n    >\n      Phonebook\n    </NavLink>\n      )}\n  </nav>\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect (mapStateToProps)(Navigation);","export default __webpack_public_path__ + \"static/media/default-avatar.e44fc4e2.png\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles({\n  root: {\n    background: 'linear-gradient(45deg, #f44336 30%, #f44336 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n    height: 36,\n    padding: '0 20px',\n  },\n});\n\nexport default function ButtonMenu({onClick}) {\n  const classes = useStyles();\n  return <Button onClick={onClick} className={classes.root}>Logout</Button>;\n}","import React from 'react';\nimport './UserMenu.scss';\nimport { connect } from 'react-redux';\nimport authSelectors from '../../redux/auth/auth-selectors';\nimport authOperations from '../../redux/auth/auth-operations';\nimport defaultAvatar from '../../images/default-avatar.png';\nimport ButtonMenu from '../../components/button';\n\nconst UserMenu = ({ avatar, name, onLogout }) => (\n  <div className=\"MenuContainer\">\n    <img src={avatar} alt=\"\" width=\"32\" className=\"MenuAvatar\" />\n    <span className=\"MenuName\">Welcome, {name}</span>\n    <ButtonMenu onClick={onLogout} />\n  </div>\n);\n\nconst mapStateToProps = state => ({\n  name: authSelectors.getUsername(state),\n  avatar: defaultAvatar,\n});\n\nconst mapDispatchToProps = {\n  onLogout: authOperations.logOut,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\n\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst AuthNav = () => (\n  <div>\n    <NavLink\n      to=\"/register\"\n      exact\n      className=\"NavLink\"\n      activeClassName=\"NavLink--active\"\n    >\n      Sign up\n    </NavLink>\n    <NavLink\n      to=\"/login\"\n      exact\n      className=\"NavLink\"\n      activeClassName=\"NavLink--active\"\n    >\n      Log in\n    </NavLink>\n  </div>\n);\n\nexport default AuthNav;","import React from 'react';\nimport { connect } from 'react-redux';\nimport Navigation from './Navigation';\nimport UserMenu from './UserMenu/UserMenu';\nimport AuthNav from './AuthNav';\nimport authSelectors from '../redux/auth/auth-selectors';\n\nconst styles = {\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderBottom: '1px solid #2A363B',\n  },\n};\n\nconst AppBar = ({ isAuthenticated }) => (\n  <header style={styles.header}>\n    <Navigation />\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\n  </header>\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(AppBar);","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport authSelectors from '../redux/auth/auth-selectors';\n\n/**\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\n * - В противном случае рендерит Redirect на /login\n */\nconst PrivateRoute = ({\n  component: Component,\n  token,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n     token ? <Component {...props} /> : <Redirect to={redirectTo} />\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  token: authSelectors.getToken(state)\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport authSelectors from '../redux/auth/auth-selectors';\n\n/**\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /contacts\n * - В противном случае рендерит компонент\n */\nconst PublicRoute = ({\n  component: Component,\n  token,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route \n    {...routeProps}\n    render={props =>\n      token && routeProps.restricted ? (\n        <Redirect to={redirectTo} />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  token: authSelectors.getToken(state)\n});\n\nexport default connect(mapStateToProps)(PublicRoute);","import React, { Component, Suspense, lazy } from 'react';\nimport { Switch } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport AppBar from './components/AppBar';\nimport Layout from './components/Layout/Layout';\nimport authOperations from './redux/auth/auth-operations';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\nimport Spinner from './components/Spinner/Spinner';\n\nconst HomePage = lazy(() => import('./pages/HomePage'));\nconst RegisterPage = lazy(() => import('./pages/RegisterPage'));\nconst LoginPage = lazy(() => import('./pages/LoginPage'));\nconst PhoneBookPage = lazy(() => import('./pages/PhoneBookPage'));\n\nclass App extends Component {\n      static propTypes = {\n        onGetCurrentUser: PropTypes.func,\n      };\n    \n    componentDidMount() {\n        this.props.onGetCurrentUser();\n    }\n    render() {\n        return (\n            <Layout>\n                <AppBar />\n\n                <Suspense fallback={<Spinner/>}>\n                    <Switch>\n                    <PublicRoute\n                        exact\n                        path=\"/\"\n                        restricted\n                        redirectTo=\"/contacts\"\n                        component={HomePage} />\n                    <PublicRoute\n                        path=\"/register\"\n                        restricted\n                        redirectTo=\"/contacts\"\n                        component={RegisterPage} />\n                    <PublicRoute\n                        path=\"/login\"\n                        restricted\n                        redirectTo=\"/contacts\"\n                        component={LoginPage} />\n                    <PrivateRoute\n                        path=\"/contacts\"\n                        redirectTo=\"/login\"\n                        component={PhoneBookPage}\n                    />\n                    </Switch>\n                 </Suspense>\n            </Layout>\n        );\n    };\n};\n\nconst mapDispatchToProps = {\n    onGetCurrentUser: authOperations.getCurrentUser\n}\n\nexport default connect(null, mapDispatchToProps)(App);\n\n\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n    fetchContactRequest,\n    fetchContactSuccess,\n    fetchContactError,\n    addContactRequest,\n    addContactSuccess,\n    addContactError,\n    removeContactRequest,\n    removeContactSuccess,\n    removeContactError,\n    changeFilter,\n    clearError\n} from './phoneBook-actions'; \n\nconst initialState = {\n        contacts: [],\n        filter: '',\n        loading: false,\n        error: null,\n};\n\nconst contacts = createReducer(initialState.contacts, {\n    [fetchContactSuccess]: (_, { payload }) => payload,\n    [addContactSuccess]: (state, { payload }) => [...state, payload],\n    [removeContactSuccess]: (state, { payload }) =>\n        state.filter(({ id }) => id !== payload),\n});\n\nconst loading = createReducer(initialState.loading, {\n    [fetchContactRequest]: () => true,\n    [fetchContactSuccess]: () => false,\n    [fetchContactError]: () => false,\n    [addContactRequest]: () => true,\n    [addContactSuccess]: () => false,\n    [addContactError]: () => false,\n    [removeContactRequest]: () => true,\n    [removeContactSuccess]: () => false,\n    [removeContactError]: () => false,\n});\n\nconst filter = createReducer(initialState.filter, {\n    [changeFilter]: (_, { payload }) => payload,\n});\n\nconst setError = (_, { payload }) => payload;\n\nconst error = createReducer(initialState.error, {\n    [fetchContactError]: setError,\n    [addContactError]: setError,\n    [removeContactError]: setError,\n    [clearError]: () => null,\n});\n\nexport default combineReducers({\n    contacts,\n    filter,\n    loading,\n    error\n});","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport authActions from './auth-actions';\n\nconst initialUserState = {\n    name: null,\n    email: null\n};\n\nconst user = createReducer(initialUserState, {\n    [authActions.registerSuccess]: (_, { payload }) => payload.user,\n    [authActions.loginSuccess]: (_, { payload }) => payload.user,\n    [authActions.logoutSuccess]: () => initialUserState,\n    [authActions.getCurrentUserSuccess]: (_, { payload }) => payload\n});\n\nconst token = createReducer(null, {\n    [authActions.registerSuccess]: (_, { payload }) => payload.token,\n    [authActions.loginSuccess]: (_, { payload }) => payload.token,\n    [authActions.logoutSuccess]: () => null\n});\n\n\nconst setError = (_, { payload }) => payload;\n\nconst error = createReducer(null, {\n    [authActions.registerError]: setError,\n    [authActions.loginError]: setError,\n    [authActions.logoutError]: setError,\n    [authActions.getCurrentUserError]: setError,\n    [authActions.clearError]: () => null,\n});\n\nconst isAuthenticated = createReducer(false, {\n    [authActions.registerSuccess]: () => true,\n    [authActions.loginSuccess]:() => true,\n    [authActions.getCurrentUserSuccess]: () => true,\n    [authActions.registerError]: () => false,\n    [authActions.loginError]: () => false,\n    [authActions.getCurrentUserError]: () => false,\n    [authActions.logoutSuccess]: () => false\n});\n\nconst loading = createReducer(false, {\n    [authActions.registerSuccess]: () => false,\n    [authActions.registerRequest]: () => true,\n    [authActions.registerError]: () => false,\n    [authActions.loginSuccess]: () => false,\n    [authActions.loginRequest]: () => true,\n    [authActions.loginError]: () => false,\n    [authActions.logoutRequest]: () => true,\n    [authActions.logoutSuccess]: () => false,\n    [authActions.logoutError]: () => false,\n    [authActions.getCurrentUserRequest]: () => true,\n    [authActions.getCurrentUserSuccess]: () => false,\n    [authActions.getCurrentUserError]: () => false,\n    [authActions.clearError]: () => false,\n});\n\nexport default combineReducers({\n    user,\n    isAuthenticated,\n    token,\n    loading,\n    error\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'; \nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport phoneBookReducer from './phoneBook/phoneBook-reducer';\nimport authReducer from './auth/auth-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token']\n};\n\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    phoneBook: phoneBookReducer,\n    },\n    middleware,\n    devTools: process.env.NODE_ENV === 'development',\n})\n\nconst persistor = persistStore(store);\nexport default { store, persistor };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport store from './redux/store';\nimport Spinner from './components/Spinner/Spinner';\nimport '../node_modules/modern-normalize/modern-normalize.css';\nimport './styles/base.scss';\n\n\nReactDOM.render(\n    <Provider store={store.store}>\n        <PersistGate\n            loading={<Spinner/>}\n            persistor={store.persistor}>\n             <BrowserRouter>\n                <App />\n            </BrowserRouter>\n    </PersistGate>\n    </Provider>,\n    document.querySelector('#root'),\n);\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\n\nconst getUsername = state => state.auth.user.name;\n\nconst getError = state => state.auth.error;\n\nconst getToken = state => state.auth.token;\n\nconst getLoading = state => state.auth.loading;\n\n const authSelectors = {\n     getIsAuthenticated,\n     getUsername,\n     getError,\n     getToken,\n     getLoading\n};\n\nexport default authSelectors;","import React from 'react';\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport './Spinner.scss';\n\nconst Spinner = () => {\n    return (\n        <div className=\"Loader\">\n             <Loader\n                 type=\"ThreeDots\"\n                 color=\"#00BFFF\"\n                 height={100}\n                 width={100}\n                timeout={300} \n                />\n        </div>\n    );\n};\n\nexport default Spinner;\n\n","import axios from 'axios';\nimport authActions from './auth-actions';\n\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nconst register = credential => async dispatch => {\n    dispatch(authActions.registerRequest());\n\n    try {\n      const response = await axios.post('/users/signup', credential);\n      \n      token.set(response.data.token);\n      dispatch(authActions.registerSuccess(response.data));\n    } catch (error) {\n      dispatch(authActions.registerError(error.message));\n    }  \n};\n\nconst logIn = credential => async dispatch => {\n     dispatch(authActions.registerRequest());\n\n    try {\n      const response = await axios.post('/users/login', credential);\n      \n      token.set(response.data.token);\n      dispatch(authActions.loginSuccess(response.data));\n    } catch (error) {\n      dispatch(authActions.loginError(error.message));\n    }  \n };\n\nconst logOut = () => async dispatch => {\n  dispatch(authActions.logoutRequest());\n\n    try {\n      await axios.post('/users/logout');\n\n    \n      token.unset();\n      dispatch(authActions.logoutSuccess());\n    } catch (error) {\n      dispatch(authActions.logoutError(error.message));\n    }  \n};\n\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const { auth: { token: persistedToken }, } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n\n  dispatch(authActions.getCurrentUserRequest());\n\n  try {\n    const response = await axios.get('/users/current');\n\n    dispatch(authActions.getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error.message));\n    //На случай если в локал сторедж остался какой-то токен чтобы его почистить\n    dispatch(authActions.logoutSuccess());\n  }\n};\n\nconst authOperations = {\n    register,\n    logIn,\n    logOut,\n    getCurrentUser\n};\n\nexport default authOperations;","import { createAction } from '@reduxjs/toolkit';\n\nconst registerSuccess = createAction('auth/registerSuccess');\nconst registerRequest = createAction('auth/registerRequest');\nconst registerError = createAction('auth/registerError');\n\nconst loginSuccess = createAction('auth/loginSuccess');\nconst loginRequest = createAction('auth/loginRequest');\nconst loginError = createAction('auth/loginError');\n\nconst logoutRequest = createAction('auth/logoutRequest');\nconst logoutSuccess = createAction('auth/logoutSuccess');\nconst logoutError = createAction('auth/logoutError');\n\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\n\nconst clearError = createAction('auth/clearError');\n\nconst authActions = {\n    registerSuccess,\n    registerRequest,\n    registerError,\n    loginSuccess,\n    loginRequest,\n    loginError,\n    logoutRequest,\n    logoutSuccess,\n    logoutError,\n    getCurrentUserRequest,\n    getCurrentUserSuccess,\n    getCurrentUserError,\n    clearError\n};\n\nexport default authActions;","import React from 'react';\nimport './Layout.scss';\n\nconst Layout = ({ children }) =>\n    <div className=\"Layout\">{children}</div>;\n\nexport default Layout;"],"sourceRoot":""}