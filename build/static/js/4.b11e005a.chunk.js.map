{"version":3,"sources":["redux/phoneBook/phoneBook-selectors.js","components/Notification/Notification.js","redux/phoneBook/phoneBook-operations.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/IconButton/IconButton.js","icons/delete.svg","components/ContactList/ContactList.js","components/Logo/Logo.js","pages/PhoneBookPage.js"],"names":["getFilter","state","phoneBook","filter","getAllContacts","contacts","selectors","getLoading","loading","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","name","includes","getError","error","Notification","this","props","errorAuth","setTimeout","clearErrorAuth","errorPb","clearErrorPb","in","message","timeout","classNames","unmountOnExit","className","Component","connect","authSelectors","dispatch","phoneBookActions","authActions","clearError","operations","fetchContacts","fetchContactRequest","axios","get","then","data","fetchContactSuccess","catch","fetchContactError","addContact","number","contact","addContactRequest","post","addContactSuccess","addContactError","removeContact","contactId","removeContactRequest","delete","removeContactSuccess","removeContactError","ContactForm","setMessage","note","setState","handleChange","e","target","value","handleSubmit","preventDefault","find","item","onSubmit","autoComplete","htmlFor","type","id","onChange","onChangeFilter","CSSTransition","length","IconButton","children","onClick","defaultProps","_extends","Object","assign","i","arguments","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","d","SvgDelete","_ref","svgRef","title","titleId","fill","xmlns","xmlnsXlink","x","y","viewBox","style","enableBackground","xmlSpace","ref","ForwardRef","onRemoveContact","TransitionGroup","component","map","aria-label","width","height","Logo","appear","PhoneBookPage","Layout","isLoadingContacts","Spinner","ommountOnExit"],"mappings":"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","file":"static/js/4.b11e005a.chunk.js","sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nconst getLoading = state => state.phoneBook.loading;\n\nconst getFilter = state => state.phoneBook.filter;\n\nconst getAllContacts = state => state.phoneBook.contacts;\n\nconst getError = state => state.phoneBook.error;\n\n//Без мемоизации\n// const getVisibleContacts = state => {\n//     const contacts = getAllContacts(state);\n//     const filter = getFilter(state);\n//     const normalizedFilter = filter.toLowerCase();\n\n//     return contacts.filter(({ name }) =>\n//         name.toLowerCase().includes(normalizedFilter),\n//     );\n// };\n\n//С мемоизацией\nconst getVisibleContacts = createSelector(\n    [getAllContacts, getFilter],\n    (contacts, filter) => { \n         const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n        name.toLowerCase().includes(normalizedFilter),\n    );\n    },\n);\n\nconst selectors = {\n    getLoading,\n    getFilter,\n    getVisibleContacts,\n    getAllContacts,\n    getError\n};\n\nexport default selectors;","import React, { Component } from 'react';\nimport * as phoneBookActions from '../../redux/phoneBook/phoneBook-actions';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport './Notification.scss';\nimport selectors from '../../redux/phoneBook/phoneBook-selectors';\nimport authSelectors from '../../redux/auth/auth-selectors';\nimport authActions from '../../redux/auth/auth-actions';\n\nclass Notification extends Component {\n    static propTypes = {\n        message: PropTypes.string,\n        errorPb: PropTypes.object,\n        errorAuth: PropTypes.string,\n        clearErrorPb: PropTypes.func,\n        clearErrorPAuth: PropTypes.func\n    };\n   \n   \n    componentDidUpdate() {\n         if (this.props.errorAuth) {\n            setTimeout(() => {\n                this.props.clearErrorAuth(this.state);\n            }, 2500);\n             return;\n        }\n           if (this.props.errorPb) {\n            setTimeout(() => {\n                this.props.clearErrorPb(this.state);\n            }, 2500);\n             return;\n        }\n    }\n    \n    render() {\n        return (\n            <CSSTransition\n            in={this.props.message}\n            timeout={250}\n            classNames=\"Notification-fade\"\n            unmountOnExit>\n            \n        <div className=\"Overlay\">\n        <p className=\"Notification\">\n            {this.props.message}\n        </p>\n        </div>\n        </CSSTransition>\n        );\n    };\n}\n\nconst mapStateToProps = (state) => ({\n    errorPb: selectors.getError(state),\n    errorAuth: authSelectors.getError(state)\n})\n\nconst mapDispatchToProps = dispatch => ({\n    clearErrorPb: () => dispatch(phoneBookActions.clearError()),\n    clearErrorAuth: () => dispatch(authActions.clearError())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Notification);\n\n","import axios from 'axios';\nimport {\n    fetchContactRequest,\n    fetchContactSuccess,\n    fetchContactError,\n    addContactRequest,\n    addContactSuccess,\n    addContactError,\n    removeContactRequest,\n    removeContactSuccess,\n    removeContactError\n} from './phoneBook-actions';\n\nconst fetchContacts = () => dispatch => {\n    dispatch(fetchContactRequest());\n\n    axios\n        .get('/contacts')\n        .then(({ data }) => dispatch(fetchContactSuccess(data)))\n        .catch (error => dispatch(fetchContactError(error.message)));\n};\n\n// Option with async/await, try/catch\n\n// const fetchContacts = () => async dispatch => {\n//     dispatch(fetchContactRequest());\n\n//     try {\n//         const { data } = await axios.get('/contacts');\n\n//         dispatch(fetchContactSuccess(data));\n//     } catch (error) {\n//         dispatch(fetchContactSuccess(error));\n//     }\n// }\n\nconst addContact = (name, number) => dispatch => {\n    const contact = {\n        name,\n        number,\n    };\n\n    dispatch(addContactRequest());\n\n    axios\n        .post('/contacts', contact)\n        .then(({ data }) => dispatch(addContactSuccess(data)))\n        .catch(error => dispatch(addContactError(error.message)));\n};\n\nconst removeContact = (contactId) => dispatch => {\n    dispatch(removeContactRequest());\n\n    axios\n        .delete(`/contacts/${contactId}`)\n        .then(() => dispatch(removeContactSuccess(contactId)))\n        .catch(error => dispatch(removeContactError(error.message)));\n};\n\nconst operations = {\n    fetchContacts,\n    addContact,\n    removeContact\n};\n\nexport default operations;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport operations from '../../redux/phoneBook/phoneBook-operations'\nimport selectors from '../../redux/phoneBook/phoneBook-selectors';\nimport Notification from '../../components/Notification/Notification';\nimport PropTypes from 'prop-types';\nimport './ContactForm.scss';\n\nclass ContactForm extends Component {\n    state = {\n        name: '',\n        number: '',\n        message: null\n    };\n\n    static propTypes = {\n        contacts: PropTypes.arrayOf(PropTypes.object),\n        onSubmit: PropTypes.func,\n    };\n\n    setMessage = (note) => {\n      this.setState({ message:  note});\n      setTimeout(() => {\n      this.setState({ message: null });\n      }, 2500);\n    }\n    \n    handleChange = e => {\n        const { name, value } = e.target;\n            this.setState({\n                [name]: value,\n            });\n    };\n\n    \n    handleSubmit = e => {\n        const { name, number } = this.state;\n        e.preventDefault();\n\n        if (name === '') {\n            this.setMessage('Enter contact name, please!');\n            return;\n        }\n        if (number === '') {\n            this.setMessage('Enter concact phone, please!');\n            return;\n        }\n        if (this.props.contacts.find((item) => item.name.toLowerCase() === name.toLowerCase())) {\n            this.setMessage('Contact already exists!');\n            return;\n        } \n\n        this.props.onSubmit(name, number);\n        this.setState({\n            name: '',\n            number: ''\n            });\n    }; \n    \n    render() {\n        const { name, number, message } = this.state;\n        return (\n            <div>\n                <Notification\n                    message={message} />\n                <form\n                    className=\"Form\"\n                    onSubmit={this.handleSubmit}\n                    autoComplete=\"off\">\n                    <label\n                        htmlFor=\"name\"\n                        className=\"Label\">Name</label>\n                <input\n                    type=\"text\"\n                    value={name}\n                    id=\"name\"\n                    className=\"Input\"\n                    onChange={this.handleChange}\n                    name=\"name\"\n                    />\n            \n                    <label\n                        htmlFor=\"number\"\n                        className=\"Label\">Number</label>\n                <input\n                    type=\"tel\"\n                    value={number}\n                    id=\"number\"\n                    className=\"Input\"\n                    onChange={this.handleChange}\n                    name=\"number\"\n                    />\n                    \n                    <button\n                        type=\"submit\"\n                        className=\"Button\">\n                      Add contact\n                    </button>\n                 </form>\n            </div>\n        );\n    }\n }\n\nconst mapStateToProps = (state) => ({\n    contacts: selectors.getAllContacts(state),\n})\n     \nconst mapDispatchToProps = dispatch => ({\n    onSubmit: (name, number) => dispatch(operations.addContact(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);","import { connect } from 'react-redux';\nimport * as phoneBookActions from '../../redux/phoneBook/phoneBook-actions';\nimport './Filter.scss';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport selectors from '../../redux/phoneBook/phoneBook-selectors';\n\n\nconst Filter = ({value, onChangeFilter, contacts}) => (\n    <CSSTransition\n        in={contacts.length > 1}\n        timeout={250}\n        classNames=\"Filter-fade\"\n        unmountOnExit>\n        \n        <div className=\"FindForm\">\n            <label\n                htmlFor=\"find\"\n                className=\"FindLabel\">\n            Find contact\n            </label>\n            <input\n                type=\"text\"\n                value={value}\n                id=\"find\"\n                className=\"FindInput\"\n                onChange={onChangeFilter}/>\n        </div>\n     </CSSTransition>\n)\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChangeFilter: PropTypes.func,\n  contacts: PropTypes.arrayOf(PropTypes.object),\n};\n\nconst mapStateToProps = (state) => ({\n    value: selectors.getFilter(state),\n    contacts: selectors.getAllContacts(state),\n})\n\nconst mapDispatchToProps = dispatch => ({\n    onChangeFilter: e => dispatch(phoneBookActions.changeFilter(e.target.value))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './IconButton.scss';\n\nconst IconButton = ({ children, onClick, ...allProps}) => {\n    return (\n        <button type=\"button\" onClick={onClick} className=\"IconButton\">\n            {children}\n        </button>\n    );\n};\n\nIconButton.defaultProps = {\n    onClick: () => null,\n    children: null,\n};\n\nIconButton.propTypes = {\n    onClick: PropTypes.func,\n    children: PropTypes.node,\n    'aria-label': PropTypes.string.isRequired,\n}\n\nexport default IconButton;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M59.595,52.861L37.094,30.359L59.473,7.98c1.825-1.826,1.825-4.786,0-6.611 c-1.826-1.825-4.785-1.825-6.611,0L30.483,23.748L8.105,1.369c-1.826-1.825-4.785-1.825-6.611,0c-1.826,1.826-1.826,4.786,0,6.611 l22.378,22.379L1.369,52.861c-1.826,1.826-1.826,4.785,0,6.611c0.913,0.913,2.109,1.369,3.306,1.369s2.393-0.456,3.306-1.369 l22.502-22.502l22.501,22.502c0.913,0.913,2.109,1.369,3.306,1.369s2.393-0.456,3.306-1.369 C61.42,57.647,61.42,54.687,59.595,52.861z\"\n});\n\nfunction SvgDelete(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"currentColor\",\n    id: \"Layer_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 60.963 60.842\",\n    style: {\n      enableBackground: \"new 0 0 60.963 60.842\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDelete);\nexport default __webpack_public_path__ + \"static/media/delete.1378d6d9.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport { connect } from 'react-redux';\nimport operations from '../../redux/phoneBook/phoneBook-operations';\nimport selectors from '../../redux/phoneBook/phoneBook-selectors';\nimport './ContactList.scss';\nimport PropTypes from 'prop-types';\nimport IconButton from '../IconButton/IconButton';\nimport { ReactComponent as DeleteIcon } from '../../icons/delete.svg';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\n\nconst ContactList = ({ contacts, onRemoveContact }) => {\n    return (\n            <TransitionGroup component=\"ul\">\n                {contacts.map(({ id, name, number }, i) => (\n                    <CSSTransition\n                        key={id}\n                        timeout={250}\n                        classNames=\"ContactItem-fade\">\n                        <li className=\"ContactItem\">\n                        {i + 1}. {name}: {number}\n                        <IconButton\n                            onClick={() => onRemoveContact(id)}\n                            aria-label=\"Удалить контакт\">\n                            <DeleteIcon\n                                width=\"17\"\n                                height=\"17\"\n                                fill=\"#fff\" />\n                        </IconButton>\n                        </li>\n                    </CSSTransition>\n                ))}\n            </TransitionGroup>\n    );\n};\n\nContactList.propTypes = {\n  onRemoveContact: PropTypes.func,\n  contacts: PropTypes.arrayOf(PropTypes.object),\n};\n\nconst mapStateToProps = (state) => ({\n    contacts: selectors.getVisibleContacts(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onRemoveContact: id => dispatch(operations.removeContact(id)),\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nconst Logo = () => {\n    return (\n         <CSSTransition\n             in={true}\n             appear={true}\n             timeout={500}\n             classNames=\"Title-SlideIn\"\n             unmountOnExit\n             >\n             <h1 className=\"Title\">Phonebook</h1>\n         </CSSTransition>\n    );\n};\n\nexport default Logo;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Layout from '../components/Layout/Layout';\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport Filter from '../components/Filter/Filter';\nimport ContactList from '../components/ContactList/ContactList';\nimport { CSSTransition } from 'react-transition-group';\nimport Logo from '../components/Logo/Logo';\nimport operations from '../redux/phoneBook/phoneBook-operations';\nimport Spinner from '../components/Spinner/Spinner';\nimport Notification from '../components/Notification/Notification';\nimport selectors from '../redux/phoneBook/phoneBook-selectors';\n\nclass PhoneBookPage extends Component {\n\n    static propTypes = {\n        contacts: PropTypes.arrayOf(PropTypes.object),\n        fetchContacts: PropTypes.func,\n        isLoadingContacts: PropTypes.bool,\n        error: PropTypes.string\n    };\n   \n    componentDidMount() {\n        this.props.fetchContacts();\n        \n    } ;\n    \n    render() {\n        return (\n            <Layout>\n                <Logo />\n\n                    <Notification\n                        message={this.props.error} />\n                \n                <ContactForm />\n                    \n                <Filter />\n\n                {this.props.isLoadingContacts && <Spinner />}\n                \n                <CSSTransition\n                    in={this.props.contacts.length > 0}\n                    timeout={0}\n                    ommountOnExit>\n                    <ContactList />\n                </CSSTransition>\n\n                \n                \n            </Layout>\n        );\n    };\n};\n\nconst mapStateToProps = (state) => ({\n    contacts: selectors.getAllContacts(state),\n    isLoadingContacts: selectors.getLoading(state),\n    error: selectors.getError(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    fetchContacts: () => dispatch(operations.fetchContacts())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PhoneBookPage);"],"sourceRoot":""}